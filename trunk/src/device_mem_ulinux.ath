  Author: Thomas Schoebel-Theuer
  Copyright: Thomas Schoebel-Theuer
  License: see files SOFTWARE-LICENSE, PATENT-LICENSE

brick #device_mem_ulinux
purpose Memory allocator for Linux environment, log_addr==phys_addr
desc
  Just a trivial interface to malloc().
  The logical and physical addresses are always identical.
  Standalone ATHOMUX versions will definitely require other
  device_mem implementations.
enddesc

static_data {
#include <stdlib.h>
#include <stdio.h>
}

input :<hook

output :>out

operation $gadr,$gadrcreateget
{
  @log_addr = (addr_t)(unsigned long)malloc(@log_len);
  @phys_addr = @log_addr;
  @phys_len = @log_len;
  @success = @log_addr != 0;
}

operation $get,$gettranswait
{
  @phys_addr = @log_addr;
  @phys_len = @log_len;
  @version = vers_newest;
  @success = TRUE;
}

operation $delete,$putdelete
{
  free((void*)(long)@log_addr);
  @success = TRUE;
}

operation $trans,$transwait,$transwaitput
{
  if (@direction==direct_read) memcpy(MAKE_PTR(@phys_addr), MAKE_PTR((paddr_t)@log_addr), @log_len);
  if (@direction==direct_write) memcpy(MAKE_PTR((paddr_t)@log_addr), MAKE_PTR(@phys_addr), @log_len);
  @phys_len = @log_len;
  @success = TRUE;
}

// dummy ops
operation $wait,$put,$putwait
{
  @success = TRUE;
}

operation $create,$createget
{
  @success = TRUE;
}
